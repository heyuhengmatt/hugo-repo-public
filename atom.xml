<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">Kevin&#39;s Space</title>
    <subtitle type="html">Kevin的分享博客</subtitle>
    <updated>2022-12-17T10:14:00&#43;08:00</updated>
    <id>https://www.kevinmatt.top/</id>
    <link rel="alternate" type="text/html" href="https://www.kevinmatt.top/" />
    <link rel="self" type="application/atom&#43;xml" href="https://www.kevinmatt.top/atom.xml" />
    <author>
            <name>KevinMatthHe</name>
            <uri>https://www.kevinmatt.top</uri>
            
                <email>heyuhengkevin@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.108.0">Hugo</generator>
        <entry>
            <title type="text">What Is RAID</title>
            <link rel="alternate" type="text/html" href="https://www.kevinmatt.top/posts/what-is-raid/" />
            <id>https://www.kevinmatt.top/posts/what-is-raid/</id>
            <updated>2022-12-17T10:05:54&#43;08:00</updated>
            <published>2022-12-17T09:27:26&#43;08:00</published>
            <author>
                    <name>KevinMatthHe</name>
                    <uri>https://www.kevinmatt.top/</uri>
                    <email>heyuhengkevin@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">1.RAID的定义 RAID(Redundant Array of Independent Disk 独立冗余磁盘阵列)技术是加州大学伯克利分校1987年提出，最初是为了组合小的廉价磁盘来代替大的昂贵磁盘，同时希望磁盘失效时不会使对数……</summary>
            
                <content type="html">&lt;h3 id=&#34;1raid的定义&#34;&gt;1.RAID的定义&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;RAID(Redundant Array of Independent Disk 独立冗余磁盘阵列)技术是加州大学伯克利分校1987年提出，最初是为了组合小的廉价磁盘来代替大的昂贵磁盘，同时希望磁盘失效时不会使对数据的访问受损 失而开发出一定水平的数据保护技术。RAID就是一种由多块廉价磁盘构成的冗余阵列，在操作系统下是作为一个独立的大型存储设备出现。RAID可以充分发 挥出多块硬盘的优势，可以提升硬盘速度，增大容量，提供容错功能够确保数据安全性，易于管理的优点，在任何一块硬盘出现问题的情况下都可以继续工作，不会受到损坏硬盘的影响。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	从本质去分析，RAID技术是服务于数据保护的，目的是减小故障导致的损失；减小数据丢失的可能性，最直接的办法就是设置大量的备份设备，随之而来的便是高昂的成本；RAID的出现就是为了解决风险和成本的平衡问题的；通过奇偶校验等验证算法，RAID提供了软件层面的数据保障能力，与此同时，由于软件上可以对数据进行拆分，在带宽不受限的情况下，RAID也可以在一些情形下提供更快的读写速度。&lt;/p&gt;
&lt;h3 id=&#34;2常见的raid类型&#34;&gt;2.常见的RAID类型&lt;/h3&gt;
&lt;h4 id=&#34;21-raid0又称为stripe或striping-条带&#34;&gt;2.1 RAID0(&lt;strong&gt;又称为Stripe或Striping 条带&lt;/strong&gt;)&lt;/h4&gt;
&lt;p&gt;​	即Data Stripping数据分条技术。RAID 0可以把多块硬盘连成一个容量更大的硬盘群，可以提高磁盘的性能和吞吐量。RAID0没有冗余或错误修复能力，成本低，要求至少两个磁盘，一般只是在那些对数 据安全性要求不高的情况下才被使用。&lt;/p&gt;
&lt;h5 id=&#34;raid-0的工作方式&#34;&gt;RAID 0的工作方式&lt;/h5&gt;
&lt;p&gt;​		以三块硬盘为例，系统向三个磁盘组成的逻辑硬盘(RAID0磁盘组)发出的I/O数据请求被转化为3项操作，其中的每一项操作都对应于一块物理硬盘。&lt;/p&gt;
&lt;p&gt;​		从理论上讲，三块硬盘的并行操作使同一时间内磁盘读写速度提升了3倍。 但由于总线带宽等多种因素的影响，实际的提升速率肯定会低于理论值，但是，大量数据并行传输与串行传输比较，提速效果显著显然毋庸置疑。&lt;/p&gt;
&lt;p&gt;​		RAID 0的&lt;strong&gt;缺点&lt;/strong&gt;是不提供数据冗余，因此一旦用户数据损坏，损坏的数据将无法得到恢复。&lt;/p&gt;
&lt;p&gt;​		RAID 0具有的&lt;strong&gt;特点&lt;/strong&gt;，使其特别适用于对性能要求较高，而对数据安全不太在乎的领域，如图形工作站等。对于个人用户，RAID 0也是提高硬盘存储性能的绝佳选择。&lt;/p&gt;
&lt;h4 id=&#34;22-raid1又称为mirror或mirroring-镜像&#34;&gt;2.2 RAID1(&lt;strong&gt;又称为Mirror或Mirroring 镜像&lt;/strong&gt;)&lt;/h4&gt;
&lt;p&gt;​		RAID 1称为磁盘镜像：把一个磁盘的数据镜像到另一个磁盘上，在不影响性能情况下最大限度的保证系统的可靠性和可修复性上，具有很高的数据冗余能力，但磁盘利用 率为50%，故成本最高，多用在保存关键性的重要数据的场合。RAID 1的操作方式是把用户写入硬盘的数据百分之百地自动复制到另外一个硬盘上。&lt;/p&gt;
&lt;h5 id=&#34;raid-1的工作方式&#34;&gt;RAID 1的工作方式&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://kevinmatt-1303917904.cos.ap-chengdu.myqcloud.com/img/v2-0cf774435a9043977108000f41c240e0_1440w.webp&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		当读取数据时，系统先从RAID1的源盘读取数据，如果读取数据成功，则系统不去管备份盘上的数据；如果读取源盘数据失败，则系统自动转而读取备份盘 上的数据，不会造成用户工作任务的中断。当然，我们应当及时地更换损坏的硬盘并利用备份数据重新建立Mirror，避免备份盘在发生损坏时，造成不可挽回 的数据损失。 RAID 1的优缺点&lt;/p&gt;
&lt;p&gt;​		由于对存储的数据进行百分之百的备份，在所有RAID级别中，RAID 1提供最高的数据安全保障。同样，由于数据的百分之百备份，备份数据占了总存储空间的一半，因而Mirror（镜像）的磁盘空间利用率低，存储成本高。 Mirror虽不能提高存储性能，但由于其具有的高数据安全性，使其尤其适用于存放重要数据，如服务器和数据库存储等领域。&lt;/p&gt;
&lt;h4 id=&#34;23-raid5raid0和raid1的折中方案&#34;&gt;2.3 RAID5(RAID0和RAID1的折中方案)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://kevinmatt-1303917904.cos.ap-chengdu.myqcloud.com/img/v2-01e2565e7e8f9749c1e3f83a39320ecb_1440w.webp&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;​		RAID 5 是一种存储性能、数据安全和存储成本兼顾的存储解决方案。 以四个硬盘组成的RAID 5为例，其数据存储方式如图4所示：图中，Ap为A1，A2和A3的奇偶校验信息，其它以此类推。由图中可以看出，RAID 5不对存储的数据进行备份，而是把数据和相对应的奇偶校验信息存储到组成RAID5的各个磁盘上，并且奇偶校验信息和相对应的数据分别存储于不同的磁盘 上。当RAID5的一个磁盘数据发生损坏后，利用剩下的数据和相应的奇偶校验信息去恢复被损坏的数据。&lt;/p&gt;
&lt;p&gt;​		RAID 5可以理解为是RAID 0和RAID 1的折衷方案。RAID 5可以为系统提供数据安全保障，但保障程度要比Mirror低而磁盘空间利用率要比Mirror高。RAID 5具有和RAID 0相近似的数据读取速度，只是多了一个奇偶校验信息，写入数据的速度比对单个磁盘进行写入操作稍慢。同时由于多个数据对应一个奇偶校验信息，RAID 5的磁盘空间利用率要比RAID 1高，存储成本相对较低。&lt;/p&gt;
&lt;h4 id=&#34;24-raid10raid-0和raid-1的折衷方案但没有完全使用raid1的镜像理念&#34;&gt;2.4 RAID10(&lt;strong&gt;RAID 0和RAID 1的折衷方案，但没有完全使用RAID1的镜像理念&lt;/strong&gt;)&lt;/h4&gt;
&lt;p&gt;​		RAID10也被称为镜像阵列条带。像RAID0一样，数据跨磁盘抽取；像RAID1一样，每个磁盘都有一个镜像磁盘, 所以RAID 10的另一种会说法是 RAID 0+1。RAID10提供100%的数据冗余，支持更大的卷尺寸，但价格也相对较高。对大多数只要求具有冗余度而不必考虑价格的应用来说，RAID10提供最好的性能。使用RAID10，可以获得更好的可靠性，因为即使两个物理驱动器发生故障（每个阵列中一个），数据仍然可以得到保护。RAID10需要4 + 2*N 个磁盘驱动器（N &amp;gt;=0)， 而且只能使用其中一半(或更小, 如果磁盘大小不一)的磁盘用量, 例如 4 个 250G 的硬盘使用RAID10 阵列， 实际容量是 500G。&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
        <entry>
            <title type="text">HomeLab搭建日记（一）</title>
            <link rel="alternate" type="text/html" href="https://www.kevinmatt.top/posts/my-first-post/" />
            <id>https://www.kevinmatt.top/posts/my-first-post/</id>
            <updated>2022-12-17T10:05:54&#43;08:00</updated>
            <published>2022-12-17T05:17:40&#43;08:00</published>
            <author>
                    <name>KevinMatthHe</name>
                    <uri>https://www.kevinmatt.top/</uri>
                    <email>heyuhengkevin@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">背景 苦于国内各大流媒体平台长期以来的分辨率、码率不达标导致观影体验不够完美，一直以来有保存高质量的(eg:4K HEVC 10bit)电影以供收藏和回放的需求，于是衍生出……</summary>
            
                <content type="html">&lt;img src=&#34;https://kevinmatt-1303917904.cos.ap-chengdu.myqcloud.com/20201018113823.png&#34; alt=&#34;img&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;h3 id=&#34;背景&#34;&gt;背景&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;苦于国内各大流媒体平台长期以来的分辨率、码率不达标导致观影体验不够完美，一直以来有保存高质量的(eg:4K HEVC 10bit)电影以供收藏和回放的需求，于是衍生出了大容量的存储需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;阶段1外接机械硬盘&#34;&gt;阶段1：外接机械硬盘&lt;/h3&gt;
&lt;p&gt;​	在媒体这类侧重于&lt;strong&gt;连续读写性能&lt;/strong&gt;的冷数据存储上，我选择了更低成本的机械硬盘方案，由于自用的itx主机没有加装3.5寸机械硬盘的空间，于是采用了外接硬盘盒的方案；初期使用的硬盘容量为4TB，选用的硬盘是经典的&lt;code&gt;希捷vx007&lt;/code&gt;垂直盘&lt;/p&gt;
&lt;h3 id=&#34;阶段2突遭飞来横祸&#34;&gt;阶段2：突遭飞来横祸&lt;/h3&gt;
&lt;p&gt;​	阶段1中的方案在愉快自然的运作了一年后，在一场意外中戛然而止：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kevinmatt-1303917904.cos.ap-chengdu.myqcloud.com/img/QQ%25E5%259B%25BE%25E7%2589%258720221217053914.jpg&#34; alt=&#34;QQ图片20221217053914&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	我的硬盘盒因为我的飞起一脚，在运行过程中惨遭荼毒；Windows当场无法读盘，重新通电后，硬盘发出了磁头敲打的声音；&lt;strong&gt;我4TB的高清大片儿们，也随它一起消失在了这个世界上&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在惨痛的故事发生之后，咱也没有沉湎在悲痛中无法自拔而一蹶不振，在利用&lt;code&gt;Jellyfin&lt;/code&gt;缓存的元数据列表获取到了所有影片的&lt;code&gt;tmdb id&lt;/code&gt;(tmdb: &lt;a href=&#34;https://www.themoviedb.org/&#34;&gt;https://www.themoviedb.org/&lt;/a&gt;)后，连夜写了一套磁力爬虫来获取所有已经逝去的伙计们&lt;/p&gt;
&lt;h3 id=&#34;阶段3保障数据安全&#34;&gt;阶段3：保障数据安全&lt;/h3&gt;
&lt;p&gt;​	算上下载的耗时，为此我花费了2-3天的时间，也只是堪堪抢救回 &lt;strong&gt;不到40%&lt;/strong&gt; 的数据&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;事情已经发生了，我们能做的只有不让这件事重演&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	很自然的，我想到了需要考虑&lt;strong&gt;数据安全&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有别于常规意义上的&lt;code&gt;信息安全&lt;/code&gt;，这里更多是为了避免软硬件的错误而导致设备故障或数据异常的安全&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​	目前，在数据安全方面，我们可以做的只有两种思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬件备份：将数据重复存储在不同的设备上&lt;/li&gt;
&lt;li&gt;Raid方案：使用算法来实现冗余和性能提升&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	对于前者而言，直接购买硬件，创建定时任务是很容易实现的方案；&lt;/p&gt;
&lt;p&gt;​	而对于后者而言，则更多侧重于软件层面的保障(详细的Raid解析可以参考&lt;a href=&#34;https://kevinmatt.top/posts/what-is-raid/&#34;&gt;什么是Raid&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;​	在一系列方案的比选之下，ZFS的Raid-Z脱颖而出，针对Raid-Z和ZFS我们可以简单的做一个概括：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ZFS是一个典型的Copy-On-Write(即写时复制)的文件系统，基于这个特性，其为我们提供了非常强大的快照功能和先进的数据保护机制，激进的内存缓存策略(通常1TB&amp;lt;==&amp;gt;1GB)也使得其拥有良好的热文件读写性能&lt;/p&gt;
&lt;p&gt;Raid-Z是ZFS提供的一种类似Raid5的软Raid，在存储池中包含一个校验驱动器，以4块4TB的硬盘为例，组成Raid-Z后将拥有3x4TB的容量和同一时间允许一块硬盘损坏/离线的冗余能力&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;阶段4truenas-scale&#34;&gt;阶段4：TrueNas Scale&lt;/h3&gt;
&lt;p&gt;​	幸运的是，我们不需要手动的与命令行频繁的交互，开源的存储系统开发商TrueNas为我们提供了一套完整的ZFS系统交互组件和WebUI，考虑到Linux更加普遍的适应性，我们最终选择了基于Debian的TrueNas Scale作为Nas的OS；&lt;/p&gt;
&lt;p&gt;​	TrueNas Scale提供了完整的Debian环境，同时附带了一套完整的k3s环境，允许我们在轻量化的环境下使用容器化技术构建我们的服务，这一特性让TrueNas Scale在Nas系统的基础上衍生出了非常广的拓展能力：&lt;/p&gt;
&lt;p&gt;​	&lt;img src=&#34;https://kevinmatt-1303917904.cos.ap-chengdu.myqcloud.com/img/TrueNAS_SCALE_Software_Features_Half_Circle_Illustration_2022-1024x612.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	随着对TrueNas Scale的了解逐渐深入，一个Home Lab的计划逐渐在我的脑海里成型了&lt;/p&gt;
&lt;p&gt;​	这样的一台Home Lab将可以承担起非常多的任务，并高效的执行一些自动化的工作；之前部署的开黑啦机器人、本机运行的Jellyfin影音服务器、局域网内的全局代理服务…&lt;/p&gt;
&lt;p&gt;​	软件上的计划已经开始成型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TrueNas Scale作为家庭服务器系统&lt;/li&gt;
&lt;li&gt;轻量云服务器作为内网服务穿透的公网节点&lt;/li&gt;
&lt;li&gt;ZFS-RAIDZ构建高可用的存储阵列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么接下来要做的就是准备硬件了，请见&lt;a href=&#34;&#34;&gt;HomeLab搭建日记（二）&lt;/a&gt;&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
