<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kevin&#39;s Space</title>
    <link>http://test.kevinmatt.top/</link>
    <description>Recent content on Kevin&#39;s Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Dec 2022 05:17:40 +0800</lastBuildDate><atom:link href="http://test.kevinmatt.top/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HomeLab搭建日记（一）</title>
      <link>http://test.kevinmatt.top/posts/my-first-post/</link>
      <pubDate>Sat, 17 Dec 2022 05:17:40 +0800</pubDate>
      
      <guid>http://test.kevinmatt.top/posts/my-first-post/</guid>
      <description>背景 苦于国内各大流媒体平台长期以来的分辨率、码率不达标导致观影体验不够完美，一直以来有保存高质量的(eg:4K HEVC 10bit)电影以供收藏和回放的需求，于是衍生出了大容量的存储需求。 123
阶段1：外接机械硬盘盒 ​	在媒体这类侧重于连续读写性能的冷数据存储上，我选择了更低成本的机械硬盘方案，由于自用的itx主机没有加装3.5寸机械硬盘的空间，于是采用了外接硬盘盒的方案；初期使用的硬盘容量为4TB，选用的硬盘是经典的希捷vx007垂直盘
阶段2：飞来横祸 ​	阶段1中的方案在愉快自然的运作了一年后，在一场意外中戛然而止：​	我的硬盘盒因为我的飞起一脚，在运行过程中惨遭荼毒；Windows当场无法读盘，重新通电后，硬盘发出了磁头敲打的声音；我4TB的高清大片儿们，也随它一起消失在了这个世界上
​	在惨痛的故事发生之后，咱也没有沉湎在悲痛中无法自拔而一蹶不振，在利用Jellyfin缓存的元数据列表获取到了所有影片的tmdb id(tmdb: https://www.themoviedb.org/)后，连夜写了一套磁力爬虫来获取所有已经逝去的伙计们
阶段3：保障数据安全 ​	算上下载的耗时，为此我花费了2-3天的时间，也只是堪堪抢救回 不到40% 的数据
事情已经发生了，我们能做的只有不让这件事重演
​	很自然的，我想到了需要考虑数据安全
有别于常规意义上的信息安全，这里更多是为了避免软硬件的错误而导致设备故障或数据异常的安全
​	目前，在数据安全方面，我们可以做的只有两种思路：
硬件备份：将数据重复存储在不同的设备上 Raid方案：使用算法来实现冗余和性能提升 ​	对于前者而言，直接购买硬件，创建定时任务是很容易实现的方案；
​	而对于后者而言，则更多侧重于软件层面的保障(详细的Raid解析可以参考我的【另一篇博客】)</description>
    </item>
    
  </channel>
</rss>
